name: Python

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'

jobs:
  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Cache pip packages
      uses: actions/cache@v2
      env:
        cache-name: pip-packages-cache
      with:
        path: ~/.cache/pip
        key: ${{ env.cache-name }}-unit-test-${{ hashFiles('requirements/frozen/frozen_test_requirements.txt') }}
        restore-keys: |
          ${{ env.cache-name }}-unit-test-
          ${{ env.cache-name }}-

    - name: Run unit tests with pytest and check coverage
      run: ./scripts/coverage.sh

  integration-test:
    name: Integration tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Cache pip packages
      uses: actions/cache@v2
      env:
        cache-name: pip-packages-cache
      with:
        path: ~/.cache/pip
        key: ${{ env.cache-name }}-integration-test-${{ hashFiles('requirements/frozen/frozen_test_requirements.txt') }}
        restore-keys: |
          ${{ env.cache-name }}-integration-test-
          ${{ env.cache-name }}-

    - name: Run integration tests with pytest
      run: ./scripts/integration.sh

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Cache pip packages
      uses: actions/cache@v2
      env:
        cache-name: pip-packages-cache
      with:
        path: ~/.cache/pip
        key: ${{ env.cache-name }}-lint-${{ hashFiles('requirements/frozen/frozen_lint_requirements.txt') }}
        restore-keys: |
          ${{ env.cache-name }}-lint-
          ${{ env.cache-name }}-

    - name: Lint with pylint
      run: |
        ./scripts/lint.sh

  type-check:
    name: Type Check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Cache pip packages
      uses: actions/cache@v2
      env:
        cache-name: pip-packages-cache
      with:
        path: ~/.cache/pip
        key: ${{ env.cache-name }}-type-check-${{ hashFiles('requirements/frozen/frozen_type_check_requirements.txt') }}
        restore-keys: |
          ${{ env.cache-name }}-type-check-
          ${{ env.cache-name }}-

    - name: Cache mypy cache
      uses: AustinScola/mypy-cache-github-action@v1

    - name: Type Check with mypy
      run: |
        ./scripts/type_check.sh

  build:
    name: Build 
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Cache pip packages
      uses: actions/cache@v2
      env:
        cache-name: pip-packages-cache
      with:
        path: ~/.cache/pip
        key: ${{ env.cache-name }}-build-${{ hashFiles('requirements/frozen/frozen_type_check_requirements.txt') }}
        restore-keys: |
          ${{ env.cache-name }}-build-
          ${{ env.cache-name }}-

    - name: Build distributions
      run: |
        ./scripts/build.sh

  check-formatting:
    name: Check formatting
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Cache pip packages
      uses: actions/cache@v2
      env:
        cache-name: pip-packages-cache
      with:
        path: ~/.cache/pip
        key: ${{ env.cache-name }}-format-${{ hashFiles('requirements/frozen/frozen_type_check_requirements.txt') }}
        restore-keys: |
          ${{ env.cache-name }}-format-
          ${{ env.cache-name }}-

    - name: Format the repository
      run: ./scripts/format.sh

    - name: Check formatting
      run: git diff --exit-code
